###############################################################################
### Copyright ##################################################################
## 
## Copyright 2022 Daniel Alvarez <shogundevel@gmail.com>
## 
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation files
## (the "Software"), to deal in the Software without restriction,
## including without limitation the rights to use, copy, modify, merge,
## publish, distribute, sublicense, and/or sell copies of the Software,
## and to permit persons to whom the Software is furnished to do so,
## subject to the following conditions:
## 
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
## 
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
## MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
## IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
## CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
## TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
## SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
## 
################################################################################

var table

function copy(object)
    var copy = [ ]
    for value in object do
        copy << value
    return copy

function slice(list, start, _end)
    var slice = [ ]
    for i in range(start, _end) do
        slice << list[i]
    return slice

var rawset
var rawget
var print

function pop(list)
    var value = list[sizeof(list) - 1]
    rawget(list, "data")[sizeof(list)] = null
    return value

function popindex(list, index)
    return rem(list, index + 1)

function find(list, value)
    for i in range(sizeof(list)) do
        if value == list[i] then
            return i
    return -1

function concat(list, other)
    var concat = [ ]
    for x in list do concat << x
    for y in other do concat << y
    return concat

function extend(list, other)
    for value in other do
        list << value

function remove(table, index)
    var value = table[index]
    table[index] = null
    return value

function update(table, other)
